#!/bin/bash
#
# Output if successful: List of latest versions of locked files, in the order
# given in the input, with the following format:
#   A1.5 : File is alive, and current version is 1.5
#   D1.5 : File is dead, and last version was 1.5
#   A1.0 : No version of the file in the repository.

#iscvsOK() - Check if your current CVS version is higher or equal to input
#usage: $1: Threshold version(oldest compatible version)
#returns something if OK, if not empty
iscvsOK(){
 tver=$(echo $1 | sed 's/[0-9]\+/0000&/g;s/0*\([0-9]\{3,\}\)/\1/g;s/\.//g')
 cver=$(cvs -v | grep "[0-9]\+\.[0-9]\+" | cut -d ' ' -f5 | sed 's/[0-9]\+/0000&/g;s/0*\([0-9]\{3,\}\)/\1/g;s/\.//g')
 if [[ ($cver > $tver) || ($cver == $tver) ]]; then echo 1; fi
}
#Minimum compatible CVS version
minver=1.12.8
#CVS compatibility test
if test -z $(iscvsOK $minver); then
  echo "Error: CVS version not supported (version $minver or higher required)"
  exit 1
fi
dow_root=$(dirname "$(pwd)")
cvs_repo="$dow_root/cvs_repo"
export CVSROOT=$(awk -F "=" '/^CVS.ROOTPATH[ =]/{gsub(/[ \t]*/,"",$2);print $2}' "$dow_root/config")

cd $cvs_repo
#cvs doesnt support lock natively, so this script also does not. Sorry
#but if it did , this would be the place.
for param in "$@"
do
  while read line
  do
    if [[ -z $line ]]; then
      echo A1.0
    else
      isdead=$(echo "$line" | cut -c 43-46)
      if [[  $isdead == 'dead' ]]; then
        echo D$(echo "$line" | cut -d ' ' -f5)
      else
        echo A$(echo "$line" | cut -d ' ' -f5)
      fi
    fi
  done <<<"$(cvs rls -d -l $param 2>/dev/null)"
done
exit
