#!/bin/sh
#
# Setup parents and fill index in data repository to reflect this version
# repository.

data_repo=../data
versions_repo=../versions
utils=../utils

delete=`git diff --cached --diff-filter=D --name-only`
add=`git diff --cached --diff-filter=AM --name-only`
versions_head_commit=`git rev-parse --quiet --verify HEAD`
versions_has_head=$? # 0 means yes.
head=`cat .git/HEAD`

if [ "${head:0:16}" != 'ref: refs/heads/' ]; then
  echo 'Detached HEAD. Aborting.'
  exit 1
fi

branch=${head:16}

cd $data_repo

if ! $utils/git_checkout.sh $branch $versions_repo $versions_has_head $versions_head_commit; then
  exit 1
fi

# Apply removes.
if [ -n "$delete" ]; then
  git rm $delete
fi

# Apply additions and modifications.
for file in $add; do
  cd "$versions_repo"
  version=`git show :0:$file`
  cd "$data_repo"
  mkdir -p $(dirname $file)
  # TODO: Put version $version of file $file in data repository.
  # For now we emulate this by the following line.
  echo "$file;$version" > $file
done
if [ -n "$add" ]; then
  git add $add
fi

# Commit in post-commit hook.

